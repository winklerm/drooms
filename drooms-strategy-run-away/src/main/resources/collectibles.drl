package org.drooms.strategy.runaway;

import org.slf4j.Logger;
import org.drooms.impl.logic.PathTracker;
import org.drooms.impl.logic.events.CollectibleAdditionEvent;
import org.drooms.impl.logic.events.CollectibleRemovalEvent;
import org.drooms.impl.logic.events.CollectibleRewardEvent;
import org.drooms.api.Collectible;
import org.drooms.api.Move;
import org.drooms.api.Node;

global Logger logger;
global PathTracker tracker;

declare entry-point rewardEvents
    @doc("A stream of reward events generated by the game")
end

declare entry-point gameEvents
    @doc("A stream of non-reward events generated by the game")
end

declare entry-point playerEvents
    @doc("A stream of events generated by players")
end

declare AvailableCollectible
    @role (event)
    node : Node
    collectible : Collectible
end

rule "Collectible appeared"
when
    $collEvent: CollectibleAdditionEvent() from entry-point "gameEvents"
    not AvailableCollectible($collEvent.getNode() == node, $collEvent.getCollectible() == collectible)
then
    insert( new AvailableCollectible($collEvent.getNode(), $collEvent.getCollectible()));
end

rule "Collectible disappeared"
when
    ($collEvent: CollectibleRemovalEvent() from entry-point "gameEvents"
    or
    $collEvent: CollectibleRewardEvent() from entry-point "rewardEvents")

    $availableCollectible: AvailableCollectible($collEvent.getNode() == node, $collEvent.getCollectible() == collectible)
then
    retract( $availableCollectible );
end

rule "Collectible on the left"
no-loop
when
    CurrentPosition($x: node.getX())
    $collAdditionEvent: AvailableCollectible(node.getX() < $x)
    $moveSuggestion : MoveSuggestion(origin == "collectible", move == Move.LEFT)
then
    logger.debug("New Collectible appeared on the left.");
    modify ($moveSuggestion) {
        addRating(10)
    }
end

rule "Collectible on the right"
no-loop
when
    CurrentPosition($x: node.getX())
    $collAdditionEvent: AvailableCollectible(node.getX() > $x)
    $moveSuggestion : MoveSuggestion(origin == "collectible", move == Move.RIGHT)
then
    logger.debug("New Collectible appeared on the right.");
    modify ($moveSuggestion) {
        addRating(10)
    }
end

rule "Collectible up"
no-loop
when
    CurrentPosition($y: node.getY())
    $collAdditionEvent: AvailableCollectible($collectY: node.getY() < $y)
    $moveSuggestion : MoveSuggestion(origin == "collectible", move == Move.UP)
then
    logger.debug("New Collectible appeared on the top.");
    modify ($moveSuggestion) {
        addRating(10)
    }
end

rule "Collectible down"
no-loop
when
    CurrentPosition($y: node.getY())
    $collAdditionEvent: AvailableCollectible($collectY: node.getY() > $y)
    $moveSuggestion : MoveSuggestion(origin == "collectible", move == Move.DOWN)
then
    logger.debug("New Collectible appeared on the bottom.");
    modify ($moveSuggestion) {
        addRating(10)
    }
end
