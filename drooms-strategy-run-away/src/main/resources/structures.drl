package org.drooms.strategy.runaway;

import org.slf4j.Logger;
import org.drooms.api.Move;
import org.drooms.impl.logic.facts.CurrentTurn;
import java.util.List;
import java.util.ArrayList;

global Logger logger;

declare entry-point rewardEvents
    @doc("A stream of reward events generated by the game")
end

declare entry-point gameEvents
    @doc("A stream of non-reward events generated by the game")
end

declare entry-point playerEvents
    @doc("A stream of events generated by players")
end

rule "Retract all obsolete move suggestions after each turn"
salience 110
no-loop
when
    CurrentTurn($currentTurn: number)
    $oldSuggestions: ArrayList(size >= 8)
        from collect(MoveSuggestion($currentTurn > turn))
then
    final List copiedSuggestions = new ArrayList($oldSuggestions);
    for (Object suggestion : copiedSuggestions) {
        retract(suggestion);
    }
end

rule "Insert initial move suggestion - left"
salience 100
when
    CurrentTurn($turn: number)
    not MoveSuggestion( move == Move.LEFT, turn == $turn )
then
    insert( new MoveSuggestion( "moves", Move.LEFT, $turn ) );
    insert( new MoveSuggestion( "collectible", Move.LEFT, $turn ) );
end

rule "Insert initial move suggestion - right"
salience 100
when
    CurrentTurn($turn: number)
    not MoveSuggestion( move == Move.RIGHT, turn == $turn )
then
    insert( new MoveSuggestion( "moves", Move.RIGHT, $turn ) );
    insert( new MoveSuggestion( "collectible", Move.RIGHT, $turn ) );
end

rule "Insert initial move suggestion - up"
salience 100
when
    CurrentTurn($turn: number)
    not MoveSuggestion( move == Move.UP, turn == $turn )
then
    insert( new MoveSuggestion( "moves", Move.UP, $turn ) );
    insert( new MoveSuggestion( "collectible", Move.UP, $turn ) );
end

rule "Insert initial move suggestion - down"
salience 100
when
    CurrentTurn($turn: number)
    not MoveSuggestion( move == Move.DOWN, turn == $turn )
then
    insert( new MoveSuggestion( "moves", Move.DOWN, $turn ) );
    insert( new MoveSuggestion( "collectible", Move.DOWN, $turn ) );
end
